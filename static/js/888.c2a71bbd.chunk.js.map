{"version":3,"file":"static/js/888.c2a71bbd.chunk.js","mappings":"8PACA,EAA+B,mCAA/B,EAA2E,6BAA3E,EAAsK,gCAAtK,EAAoN,kCAApN,EAAoQ,kCAApQ,EAAyT,uCAAzT,EAAuW,2BAAvW,EAA8Y,gCAA9Y,EAA+hB,+BAA/hB,EAA0kB,gCAA1kB,EAAsnB,gCAAtnB,EAAgqB,8BAAhqB,EAA2sB,iCAA3sB,EAAyvB,iCAAzvB,EAA0yB,oC,SC0K1yB,EAlKqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCR,EAAAA,EAAAA,UAAS,MAA3C,eAAOS,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEUC,EAAAA,EAAAA,IAAgBf,GAF1B,cAERgB,EAFQ,iBAGSC,EAAAA,EAAAA,IAAgBjB,GAHzB,OAGRkB,EAHQ,OAIdd,EAASY,GACTV,EAAQY,EAASb,MALH,kDAOdc,QAAQC,IAAI,gCAAZ,MAPc,0DAAH,qDAWfN,GACD,GAAE,CAACd,KAEJa,EAAAA,EAAAA,YAAU,WACR,IAAMQ,EAAY,mCAAG,8GAESC,EAAAA,EAAAA,IAAgBtB,GAFzB,OAEXuB,EAFW,OAGjBf,EAAWe,EAAYC,SAHN,gDAKjBL,QAAQC,IAAI,gCAAZ,MALiB,yDAAH,qDASA,YAAdT,GACFU,GAEH,GAAE,CAACrB,EAASW,IAEb,IAKkBc,EALFC,EAaVC,EAAiB,SAAAC,GACrBhB,EAAagB,EACd,EAED,OACE,+BACE,iBAAKC,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAYC,QAXhB,WACnBtB,EAAS,UACV,EASK,UACE,SAAC,KAAD,CAAMuB,GAAG,UAAUH,UAAWC,EAA9B,8BAKD3B,IACC,iCACE,iBAAK0B,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEG,IAAG,0CAAqC9B,EAAM+B,aAC9CC,IAAKhC,EAAMiC,eACXP,UAAWC,OAGf,iBAAKD,UAAWC,EAAhB,WACE,0BACG3B,EAAMiC,eADT,MArCEV,EAsCiCvB,EAAMkC,aArCxC,IAAIC,KAAKZ,GACVa,eAmCA,QAGA,yCAAsC,GAArBpC,EAAMqC,aAAvB,QACA,sCACA,uBAAIrC,EAAMsC,YACV,oCACA,wBAvCIhB,EAuCUtB,EAAMsB,OAtCzBA,EAAOiB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBA0CpC,4BACE,gBAAKhB,UAAWC,EAAhB,UACE,gBAAID,UAAWC,EAAf,WACE,yBACE,mBACEC,QAAS,kBAAMJ,EAAe,OAArB,EACTE,UAAS,UACO,SAAdlB,EAAuBmB,EAAgB,GADhC,YAELA,GAJN,qBASF,yBACE,mBACEC,QAAS,kBAAMJ,EAAe,UAArB,EACTE,UAAyB,YAAdlB,EAA0BmB,EAAgB,GAFvD,4BAUS,SAAdnB,IACC,yBACGN,EAAKyC,OAAS,GACb,iBAAKjB,UAAWC,EAAhB,WACE,iCACCzB,EAAKqC,KAAI,SAAAK,GAAK,OACb,0BACE,iBAAKlB,UAAWC,EAAhB,WACE,gBACEG,IAAG,0CAAqCc,EAAMC,cAC9Cb,IAAKY,EAAMH,KACXf,UAAWC,KAEb,4BACE,wBAAKiB,EAAMH,QACX,uCAAeG,EAAME,oBATjBF,EAAMG,GADH,QAiBjB,iDAKS,YAAdvC,IACC,yBACGJ,EAAQuC,OAAS,GAChB,iBAAKjB,UAAWC,EAAhB,WACE,oCACCvB,EAAQmC,KAAI,SAAAS,GAAM,OACjB,4BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFHF,EAAOD,GADA,QAQrB,8DAUnB,C,wMCvKKI,EAAU,mCAEVC,EAAW,+BAGXC,EAAG,mCAAG,WAAOC,GAAP,gGAAYC,EAAZ,+BAAqB,CAAC,EAAtB,kBAEeC,EAAAA,EAAAA,IAAUF,EAAK,CACpCC,QAAO,kBAAMA,GAAP,IAAeE,QAASN,MAHxB,cAEFO,EAFE,yBAKDA,EAASC,MALR,sCAOF,IAAIC,OACR,eAAMF,gBAAN,mBAAgBC,YAAhB,eAAsBE,iBAAkB,wBARlC,yDAAH,sDAcIC,EAAoB,WAC/B,IAAMR,EAAG,UAAMF,EAAN,uBACT,OAAOC,EAAIC,EACZ,EAGYS,EAAe,SAAAC,GAC1B,IAAMV,EAAG,UAAMF,EAAN,iBAET,OAAOC,EAAIC,EADI,CAAEU,MAAAA,GAElB,EAGYpD,EAAkB,SAAAf,GAC7B,IAAMyD,EAAG,UAAMF,EAAN,kBAAwBvD,GACjC,OAAOwD,EAAIC,EACZ,EAGYxC,EAAkB,SAAAjB,GAC7B,IAAMyD,EAAG,UAAMF,EAAN,kBAAwBvD,EAAxB,YACT,OAAOwD,EAAIC,EACZ,EAGYnC,EAAkB,SAAAtB,GAC7B,IAAMyD,EAAG,UAAMF,EAAN,kBAAwBvD,EAAxB,YACT,OAAOwD,EAAIC,EACZ,C","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"goBack\":\"MovieDetails_goBack__z8Pee\",\"movieSection\":\"MovieDetails_movieSection__O7JS3\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"moviePoster\":\"MovieDetails_moviePoster__M1O9z\",\"posterImage\":\"MovieDetails_posterImage__VZLT9\",\"movieDetailsText\":\"MovieDetails_movieDetailsText__Q7hl7\",\"tabs\":\"MovieDetails_tabs__8xDA5\",\"activeTab\":\"MovieDetails_activeTab__h6QcQ\",\"castSection\":\"MovieDetails_castSection__3B5Y+\",\"reviewsSection\":\"MovieDetails_reviewsSection__cS0jD\",\"castItem\":\"MovieDetails_castItem__i26IE\",\"castImage\":\"MovieDetails_castImage__w5i0K\",\"linkStyle\":\"MovieDetails_linkStyle__fRQm7\",\"ulStyle\":\"MovieDetails_ulStyle__CCU+X\",\"castButton\":\"MovieDetails_castButton__26MMb\",\"castMargin\":\"MovieDetails_castMargin__ZgwAZ\",\"reviewsMargin\":\"MovieDetails_reviewsMargin__P24mL\"};","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n} from 'services/Api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        const castData = await getMovieCredits(movieId);\n        setMovie(movieData);\n        setCast(castData.cast);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    if (activeTab === 'reviews') {\n      fetchReviews();\n    }\n  }, [movieId, activeTab]);\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\n  const getGenres = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const handleGoBack = () => {\n    navigate('/movies');\n  };\n\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n\n  return (\n    <>\n      <div className={css.movieDetails}>\n        <button className={css.goBack} onClick={handleGoBack}>\n          <Link to=\"/movies\" className={css.linkStyle}>\n            &larr; Go Back\n          </Link>\n        </button>\n\n        {movie && (\n          <>\n            <div className={css.movieInfo}>\n              <div className={css.moviePoster}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={movie.original_title}\n                  className={css.posterImage}\n                />\n              </div>\n              <div className={css.movieDetailsText}>\n                <h1>\n                  {movie.original_title} ({getYear(movie.release_date)})\n                </h1>\n                <h2>User Score: {movie.vote_average * 10}%</h2>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h2>Genres</h2>\n                <p>{getGenres(movie.genres)}</p>\n              </div>\n            </div>\n\n            <div>\n              <div className={css.tabs}>\n                <ul className={css.ulStyle}>\n                  <li>\n                    <button\n                      onClick={() => handleTabClick('cast')}\n                      className={`${\n                        activeTab === 'cast' ? css.activeTab : ''\n                      } ${css.castButton}`}\n                    >\n                      Cast\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      onClick={() => handleTabClick('reviews')}\n                      className={activeTab === 'reviews' ? css.activeTab : ''}\n                    >\n                      Reviews\n                    </button>\n                  </li>\n                </ul>\n              </div>\n\n              {activeTab === 'cast' && (\n                <div>\n                  {cast.length > 0 ? (\n                    <div className={css.castMargin}>\n                      <h2>Cast</h2>\n                      {cast.map(actor => (\n                        <div key={actor.id}>\n                          <div className={css.castItem}>\n                            <img\n                              src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                              alt={actor.name}\n                              className={css.castImage}\n                            />\n                            <div>\n                              <h4>{actor.name}</h4>\n                              <p>Character: {actor.character}</p>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div>No cast available</div>\n                  )}\n                </div>\n              )}\n\n              {activeTab === 'reviews' && (\n                <div>\n                  {reviews.length > 0 ? (\n                    <div className={css.reviewsMargin}>\n                      <h2>Reviews</h2>\n                      {reviews.map(review => (\n                        <div key={review.id}>\n                          <h4>{review.author}</h4>\n                          <p>{review.content}</p>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div>No reviews available</div>\n                  )}\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst API_KEY = '7c129393d5285449cf063c1d2343a097'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nconst get = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, {\n      params: { ...params, api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.status_message || 'Something went wrong'\n    );\n  }\n};\n\n\nexport const getTrendingMovies = () => {\n  const url = `${BASE_URL}/trending/movie/day`;\n  return get(url);\n};\n\n\nexport const searchMovies = query => {\n  const url = `${BASE_URL}/search/movie`;\n  const params = { query };\n  return get(url, params);\n};\n\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}`;\n  return get(url);\n};\n\n\nexport const getMovieCredits = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits`;\n  return get(url);\n};\n\n\nexport const getMovieReviews = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews`;\n  return get(url);\n};"],"names":["movieId","useParams","useState","movie","setMovie","cast","setCast","reviews","setReviews","navigate","useNavigate","activeTab","setActiveTab","useEffect","fetchData","getMovieDetails","movieData","getMovieCredits","castData","console","log","fetchReviews","getMovieReviews","reviewsData","results","genres","releaseDate","handleTabClick","tab","className","css","onClick","to","src","poster_path","alt","original_title","release_date","Date","getFullYear","vote_average","overview","map","genre","name","join","length","actor","profile_path","character","id","review","author","content","API_KEY","BASE_URL","get","url","params","axios","api_key","response","data","Error","status_message","getTrendingMovies","searchMovies","query"],"sourceRoot":""}