{"version":3,"file":"static/js/186.1999fb38.chunk.js","mappings":"gNAkCA,UA/BgB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAUJ,EAAMK,OAAOD,QAe7B,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBJ,GAFjB,OAEhBK,EAFgB,OAGtBN,EAAWM,EAASC,SAHE,gDAKtBC,QAAQC,IAAI,gCAAZ,MALsB,yDAAH,qDASvBL,GACD,GAAE,CAACH,KAGF,4BACE,oCACCF,EAAQW,KAAI,SAAAC,GAAM,OACjB,4BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFHF,EAAOG,GADA,MAQxB,C,wMC9BKC,EAAU,mCAEVC,EAAW,+BAGXC,EAAG,mCAAG,WAAOC,GAAP,gGAAYhB,EAAZ,+BAAqB,CAAC,EAAtB,kBAEeiB,EAAAA,EAAAA,IAAUD,EAAK,CACpChB,QAAO,kBAAMA,GAAP,IAAekB,QAASL,MAHxB,cAEFT,EAFE,yBAKDA,EAASe,MALR,sCAOF,IAAIC,OACR,eAAMhB,gBAAN,mBAAgBe,YAAhB,eAAsBE,iBAAkB,wBARlC,yDAAH,sDAcIC,EAAoB,WAC/B,IAAMN,EAAG,UAAMF,EAAN,uBACT,OAAOC,EAAIC,EACZ,EAGYO,EAAe,SAAAC,GAC1B,IAAMR,EAAG,UAAMF,EAAN,iBAET,OAAOC,EAAIC,EADI,CAAEQ,MAAAA,GAElB,EAGYC,EAAkB,SAAA1B,GAC7B,IAAMiB,EAAG,UAAMF,EAAN,kBAAwBf,GACjC,OAAOgB,EAAIC,EACZ,EAGYU,EAAkB,SAAA3B,GAC7B,IAAMiB,EAAG,UAAMF,EAAN,kBAAwBf,EAAxB,YACT,OAAOgB,EAAIC,EACZ,EAGYb,EAAkB,SAAAJ,GAC7B,IAAMiB,EAAG,UAAMF,EAAN,kBAAwBf,EAAxB,YACT,OAAOgB,EAAIC,EACZ,C","sources":["components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/Api';\n\nconst Reviews = ({ match }) => {\n  const [reviews, setReviews] = useState([]);\n\n  const movieId = match.params.movieId;\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <h4>{review.author}</h4>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '7c129393d5285449cf063c1d2343a097'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nconst get = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, {\n      params: { ...params, api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.status_message || 'Something went wrong'\n    );\n  }\n};\n\n\nexport const getTrendingMovies = () => {\n  const url = `${BASE_URL}/trending/movie/day`;\n  return get(url);\n};\n\n\nexport const searchMovies = query => {\n  const url = `${BASE_URL}/search/movie`;\n  const params = { query };\n  return get(url, params);\n};\n\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}`;\n  return get(url);\n};\n\n\nexport const getMovieCredits = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits`;\n  return get(url);\n};\n\n\nexport const getMovieReviews = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews`;\n  return get(url);\n};"],"names":["match","useState","reviews","setReviews","movieId","params","useEffect","fetchMovieReviews","getMovieReviews","response","results","console","log","map","review","author","content","id","API_KEY","BASE_URL","get","url","axios","api_key","data","Error","status_message","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}